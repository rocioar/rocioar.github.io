<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on roschegel</title>
    <link>/tags/testing/</link>
    <description>Recent content in testing on roschegel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>By Rocio Aramberri</copyright>
    <lastBuildDate>Sun, 17 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simplied Django Tests With Pytest and Pytest FactoryBoy</title>
      <link>/posts/simplied-django-tests-with-pytest-and-pytest-factoryboy/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/simplied-django-tests-with-pytest-and-pytest-factoryboy/</guid>
      <description>I&amp;rsquo;m always trying to find ways to make tests easier to read and extend. I hate working through a really hard feature and having to spend a big amount of time writing tests.
Lately, I&amp;rsquo;ve been bothered by the amount of boilerplate on my test code. So, I decided to do some research and look for alternatives.
When testing Django applications, I use a combination of Pytest fixtures and FactoryBoy to write tests that need database records.</description>
    </item>
    
    <item>
      <title>Making your Django tests faster</title>
      <link>/posts/making-your-django-tests-faster/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/making-your-django-tests-faster/</guid>
      <description>Tests need to be fast. If tests are slow, our development process is affected and we end up spending a considerable amount of time waiting for the results.
I will go through some of the techniques that I’ve applied to speed up tests on Django applications.
Tips for speeding up test execution 1. Run your tests in parallel If you are running your tests on multi-core hardware, running your tests in parallel is probably the best optimization you can make if you aren’t doing it yet.</description>
    </item>
    
  </channel>
</rss>